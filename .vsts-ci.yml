resources:
  containers:
  - container: nv-bionic-wasm
    image: nventive/mono-wasm-build:0.1

jobs:
- job: Linux

  container: nv-bionic-wasm

  timeoutInMinutes: 120

  workspace:
    clean: all
      
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  #- bash: |
  #    sudo apt-get update
  #    sudo apt-get install curl libtool automake autoconf g++ cmake gcc-multilib g++-multilib lld lib32ncurses5-dev nuget mono-devel ninja-build mingw-w64 p7zip-full
  - bash: |
      sudo apt-get update
      sudo apt-get install -y python3-pip locales p7zip-full zip

    displayName: Install mono dependencies

  - bash: |
      git clone --recursive https://github.com/jeromelaban/mono -b dev/jela/release-dynamic

    displayName: Clone mono

  - bash: |
      cd mono
      echo "DISABLE_ANDROID=1" > sdks/Make.config
      echo "DISABLE_IOS=1" >> sdks/Make.config
      echo "DISABLE_MAC=1" >> sdks/Make.config
      echo "DISABLE_DESKTOP=1" >> sdks/Make.config
      make -C sdks/builds provision-wasm

    displayName: Provision wasm sdk

  - bash: |
      cd mono
      make -C sdks/builds build-wasm NINJA=

    displayName: Build wasm archive

  - bash: |
      cd mono
      make -C sdks/builds archive-wasm NINJA=

    displayName: Archive wasm

  - bash: |
      cd mono
      make -C sdks/builds package-wasm-runtime package-wasm-cross package-wasm-bcl

    displayName: Build AOT Toolchain

  - bash: |
      cd mono
      make -C sdks/wasm package

    displayName: Package wasm

  - bash: |
      cd mono
      cp wasm-release-Linux-*.zip $(build.artifactstagingdirectory)
      cp sdks/wasm/*.zip $(build.artifactstagingdirectory)

    displayName: Copy files

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: mono-sdk
      ArtifactType: Container
