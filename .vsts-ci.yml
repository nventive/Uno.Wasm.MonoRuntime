resources:
  containers:
  - container: nv-bionic-wasm
    image: unoplatform/mono-wasm-build:1.0

jobs:
- job: Mono_Build

  container: nv-bionic-wasm

  timeoutInMinutes: 240

  workspace:
    clean: all
      
  pool:
    vmImage: 'ubuntu-16.04'
    
  variables:
    CI_CPU_COUNT: 4

  steps:
  - bash: |
      sudo apt-get update
      sudo apt-get install -y python3-pip locales p7zip-full zip

    displayName: Install mono dependencies

  - bash: |
      git clone --recursive https://github.com/jeromelaban/mono -b dev/jela/gitpod

    displayName: Clone mono

  - bash: |
      cd mono
      scripts/ci/build-wasm.sh

    displayName: Build Wasm SDK

  - bash: |
      cd mono
      cp wasm-release-Linux-*.zip $(build.artifactstagingdirectory)
      cp sdks/wasm/*.zip $(build.artifactstagingdirectory)

    displayName: Copy files

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: mono-sdk
      ArtifactType: Container


- job: Packaging
  dependsOn: Mono_Build

  pool:
    vmImage: 'vs2017-win2016'
    
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true

  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: mono-sdk
        downloadPath: '$(build.sourcesdirectory)/src/Uno.Wasm.MonoRuntime/build/runtime'

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.9.2
      checkLatest: false

  - task: MSBuild@1
    inputs:
      solution: src/Uno.Wasm.MonoRuntime/Uno.Wasm.MonoRuntime.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /t:pack /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" /detailedsummary
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false
      
  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: ' $(build.sourcesdirectory)\src\Uno.Wasm.MonoRuntime\Bin\Release\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

   #- task: PowerShell@2
   #  displayName: Authenticode Sign Packages
   #  inputs:
   #    filePath: build/Sign-Package.ps1
   #  env:
   #    SignClientUser: $(SignClientUser)
   #    SignClientSecret: $(SignClientSecret)
   #    SignPackageName: "Uno.Wasm.MonoRuntime"
   #    SignPackageDescription: "The Uno Platform"
   #    ArtifactDirectory: $(build.artifactstagingdirectory)
   #  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-drop
      ArtifactType: Container
